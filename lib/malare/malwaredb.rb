#
# Malare MalwareDB library
#
module Malare
	class MalwareDB
		def initialize
			# System Config
			@sysDir = File.join(Dir.home,"/Desktop/malare")
			@binDir = @sysDir + "/binaries"
			
			@dbFile = @sysDir + "/malware.db"
			@tableName = "mwdb"
			
			# Filesystem check
			if not Dir.exists?(@sysDir)
				setup
			end
			
			# Open MalwareDB
			@db = SQLite3::Database.open(@dbFile)
			@db.results_as_hash = true
		end
		
		def addSample(file, source, cc, ip=nil , notes=nil)
			# Add Sample into MalwareDB and @binDir
			begin
				md5 = getFileMD5(file)
				date = Time.now.strftime("%Y-%m-%d")
				
				# Lookup IP address
				if ip == nil
					ip = resolveHostname(cc)
				end
				
				@db.execute("INSERT INTO #{@tableName} VALUES('#{date}', '#{md5}', '#{file}', '#{source}', '#{cc}', '#{ip}', '#{notes}')")
				
				newName = File.join(@binDir, md5)
				FileUtils.mv(file, newName)
			rescue => e
				return "[!!] #{e}"
				exit
			end
			return "[+] Added record into database and copied #{file} into #{@binDir}."
		end
		
		def searchSample(value)
			# Search for sample in MalwareDB
			results = []
			@db.execute("SELECT * FROM #{@tableName} WHERE md5 = ? OR cc = ? OR file = ? OR ip = ?", value, value, value, value) do |hash|
				
				# Why is there a duplicate of the values with keys 1..5??
				# Quick fix
				i = 0
				while i <= 6
					hash.delete(i)
					i += 1
				end
				# END

				results << hash
			end
			return results
		end
		
		def listSamples
			list =  []
			@db.execute("SELECT * FROM #{@tableName}") do |hash|
				list << "#{hash['date']} - #{hash['md5']} - #{hash['file']} - #{hash['cc']} - #{hash['ip']}"
			end
			return list
		end
		
		# Remove Sample from Database		
		def removeSample(hash)
			begin 
				# remove entry in @tableName
				@db.execute("DELETE from #{@tableName} where md5 = ?", hash)
				# remove file
				File.delete(File.join(@binDir, hash))
				
			rescue => e
				return "[!!] #{e}"
			end
			return "[] Removed #{hash} from Malare's filesystem."
			
		end

		def setup
			# Setup MalwareDB's filesystem & SQLite Database
			begin
				puts "[] Creating system folder #{@sysDir}..."
				FileUtils.mkdir_p(@binDir, :mode => 0700)

				puts "[] Creating #{@dbFile} and #{@tableName}"
				db = SQLite3::Database.new(@dbFile)
			
				query = %Q{
					CREATE TABLE IF NOT EXISTS #{@tableName}(
						date VARCHAR(255),
						md5 VARCHAR(255),
						file VARCHAR(255),
						source VARCHAR(255),
						cc VARCHAR(255),
						ip VARCHAR(255),
						notes VARCHAR(1024)
					);
				}
				db.execute(query)
				db.close
			rescue => e
				return "[!!] #{e}"
				exit
			end
		end
		
		def getFileMD5(file)
			# Get file md5-sum
			Digest::MD5.hexdigest(File.read(file))
		end
		
		def resolveHostname(hostname)
			begin
				Resolve.getaddress(hostname)
			rescue 
				#  Assuming a not found reply if rescue is called,  return N/A
				return "N/A"
			end
			
		end
		
		
	end
end
